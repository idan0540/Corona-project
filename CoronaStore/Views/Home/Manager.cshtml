
@{
    ViewBag.Title = "Manager";
}
<link href="~/css/manager.css" rel="stylesheet" type="text/css" />

<div class="container body-content page-wrapper chiller-theme toggled">
    <div id="twitter">

        <form id="tweet" action="/Manager/SendTweet">
            Tweet this text:<br />
            <input id="textToTweet" name="text" type="text" />
            <input id="submitTweet" type="submit" value="submit" class="btn-primary" />
            <img src="../../Content/images/twitter.png" width="50" height="50" />
        </form>
    </div>
    <div>
        <div class="container-fluid">
            <div id="graphs">
            </div>
            <div id="pieChart">
            </div>
        </div>
    </div>
</div>
    <style>
    </style>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>
    @*<script src="http://d3js.org/d3.v4.min.js"></script>*@
    <script src="../js/d3pie.min.js"></script>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>

    <script>
        $(document).ready(function () {
            $("#tweet").submit(function (e) {
                e.preventDefault()

                var url = $(this).attr("action");

                $.ajax({
                    url: url,
                    method: 'POST',
                    data: {
                        Text: $("#textToTweet").val()
                    }
                })
                    .done(function (result) {
                        location.reload();
                    })
                    .fail(function (result) {
                        console.log("fail" + result);
                    })
            });
        });
        // Initialize empty array

        var data = [];

        // Get JSON data and wait for the response
        d3.json("/Shop/SalesPerCategory", function (error, json) {
            $.each(json, function (d, i) {
                data.push({
                    label: i.CategoryName,
                    value: i.SalesSum
                })
            })

            var pie = new d3pie("pieChart", {
                "header": {
                    "title": {
                        "text": "Sales per category",
                        "fontSize": 22
                    },
                },

                "size": {
                    "canvasHeight": 400,
                    "canvasWidth": 590
                },

                "data": {
                    "content": data
                },

                "labels": {
                    "outer": {
                        "pieDistance": 32
                    }
                }
            });
        });

        // Get JSON data and wait for the response
        d3.json("/Users/ProductsByUser", function (error, json) {
            var data = [];
            $.each(json, function (d, i) {
                data.push({
                    label: i.UserName,
                    value: i.UserExpense
                })
            })

            // set the dimensions of the canvas
            var margin = { top: 40, right: 20, bottom: 70, left: 40 },
                width = 1200 - margin.left - margin.right,
                height = 350 - margin.top - margin.bottom;


            // set the ranges
            var x = d3.scale.ordinal().rangeRoundBands([0, width], .05);

            var y = d3.scale.linear().range([height, 0]);

            // define the axis
            var xAxis = d3.svg.axis()
                .scale(x)
                .orient("bottom")


            var yAxis = d3.svg.axis()
                .scale(y)
                .orient("left")
                .ticks(5);

            var tip = d3.tip()
                .attr('class', 'd3-tip')
                .offset([-10, 0])
                .html(function (i) {
                    return "<strong>Expense:</strong> <span style='color:red'>" + i.value + "</span>";
                })


            // add the SVG element
            var svg = d3.select("#graphs").append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("transform",
                    "translate(" + margin.left + "," + margin.top + ")");

            svg.call(tip);

            // scale the range of the data
            x.domain(data.map(function (d) { return d.label; }));
            y.domain([0, d3.max(data, function (d) { return d.value; })]);

            // add axis
            svg.append("g")
                .attr("class", "x axis")
                .attr("transform", "translate(0," + height + ")")
                .call(xAxis)
                .selectAll("text")
                .style("text-anchor", "end")
                .attr("dx", "0em")
                .attr("dy", "1.5em")
                .attr("transform", "rotate(-45)");

            svg.append("g")
                .attr("class", "y axis")
                .call(yAxis)
                .append("text")
                .attr("transform", "rotate(-90)")
                .attr("y", 5)
                .attr("dy", ".71em")
                .style("text-anchor", "end")


            // Add bar chart
            svg.selectAll("bar")
                .data(data)
                .enter().append("rect")
                .attr("class", "bar")
                .attr("x", function (d) { return x(d.label); })
                .attr("width", x.rangeBand())
                .attr("y", function (d) { return y(d.value); })
                .attr("height", function (d) { return height - y(d.value); })
                .on('mouseover', tip.show)
                .on('mouseout', tip.hide);

            svg.append("text")
                .attr("x", (width / 2))
                .attr("y", 0 - (margin.top / 2))
                .attr("text-anchor", "middle")
                .style("font-size", "22px")
                .text("Expense of top 6 custemers");

        });
    </script>
